==Section inclusion==
*Name:*Digest
*Description:*
Theoretically digest all protein seqeunce from a fasta file by trypsin
*Input files:*
  # input Input file 
*Parameters:*
  # minLength the minimum length for the digested peptides to be included in the result file 
  # maxLength the maximum length for the digested peptides to be included in the result file 
  # unique Only keeps proteotypic peptides? 
*Outputs:*
  # output with Type fasta
*Details:*

*Name:*Peptide MW and hydro
*Description:*
Calculate the molecular weight and hydrophobicity for peptides within a fasta file
*Input files:*
  # input Input file 
*Parameters:*
*Outputs:*
  # output with Type tabular
*Details:*

==Section pit==
*Name:*Extract peptides
*Description:*
Extract peptide information from various files for PIT analysis
*Input files:*
*Parameters:*
*Outputs:*
  # output with Type tabular
*Details:*

*Name:*GMAP
*Description:*
align the reads to reference genome
*Input files:*
  # input The reads 
*Parameters:*
  # species  
*Outputs:*
  # output with Type sam
*Details:*

*Name:*PIT:ORFall
*Description:*
The ORF prediction tool
*Input files:*
  # input Input file 
*Parameters:*
  # minMain the minimum length for the main ORFs in bps 
  # start Start type:  
  # stop Stop type:  
*Outputs:*
  # output with Type fasta
*Details:*

*Name:*PIT:PIT
*Description:*
The tool links sam file from GMAP to the peptide identification file with the defined regular expression
*Input files:*
  # sam Input sam file 
  # peptide Input peptide file 
*Parameters:*
  # pattern Regular expression  
  # maxFold The maximum fold change to be capped 
*Outputs:*
  # outputGff with Type gff3
  # outputFasta with Type fasta
  # outputSam with Type sam
*Details:*

*Name:*PIT:Protein Summary
*Description:*
The tool summaries the characteristics of protein sequence files
*Input files:*
*Parameters:*
  # Repeat element protein sequence files
*Outputs:*
  # output with Type tabular
*Details:*

*Name:*Species Finding
*Description:*
Use BLAST to determine which species the protein sequences come from
*Input files:*
  # input The protein sequence file 
*Parameters:*
  # threshold The threshold The cutoff value for the percentage of identity above which will be treated as a hit
  # Repeat element BLAST databases
*Outputs:*
  # output with Type tabular
*Details:*

==Section proteomics==
*Name:*MSGF+ MSMS Search
*Description:*
Run an MSGF+ Search
*Input files:*
*Parameters:*
  # fixed_mods Fixed Modifications 
  # variable_mods Variable Modifications 
  # decoy  
  # enzyme  
  # protocol  
  # instrument  
  # precursor_ion_tol Precursor ion tolerance Precursor Ion Tolerance (Da or ppm)
  # precursor_tolu  
*Outputs:*
  # output with Type mzid
*Details:*

**What it does**

Runs an MS/MS database search using the MSGFPlus search engine.

----

**References**

Please see http://proteomics.ucsd.edu/Software/MSGFPlus.html for details of the MSGFPlus search engine and references describing its algorithm
    
*Name:*emPAI analysis in X-Tracker
*Description:*
Execute emPAI quantitation method within X-Tracker
*Input files:*
*Parameters:*
  # minimum the minimum molecular weight to be observed 
  # maximum the maximum molecular weight to be observed 
  # Repeat element protein database
*Outputs:*
  # output with Type mzq
*Details:*

==Section standard==
*Name:*mzIdLib:Converter
*Description:*
Using mzIdentML-Lib to convert mzIdentML to CSV format.
*Input files:*
  # input Input file 
*Parameters:*
  # exportType  
*Outputs:*
  # output with Type csv
*Details:*

	Using mzidLib (https://code.google.com/p/mzidentml-lib/) to convert the PSI standard mzIdentML format into a more common CSV format for further processing
    
*Name:*mzIdLib:PostProcessing
*Description:*
Using mzIdentML-Lib to do some post processing including FDR calculation etc.
*Input files:*
  # input Input file 
*Parameters:*
*Outputs:*
  # output with Type mzid
*Details:*

	Using mzidLib (https://code.google.com/p/mzidentml-lib/) to do the post processing. This wrapper is highly recommended for MS/MS search engines which only produce peptide identification, e.g. MSGF+.
    
*Name:*The converter for mzQuantML files
*Description:*
Convert the mzQuantML file into more widely-used formats, e.g. CSV
*Input files:*
  # mzq the mzQuantML file The mzQuantML file to be converted
*Parameters:*
  # type the output file format The format to which the mzQuantML will be converted
*Outputs:*
  # output with Type csv
*Details:*

*Name:*Convert spectral file into mzML file
*Description:*
Convert non PSI standard mass spectral file into the PSI standard format mzML
*Input files:*
*Parameters:*
*Outputs:*
  # output with Type mzml
*Details:*

